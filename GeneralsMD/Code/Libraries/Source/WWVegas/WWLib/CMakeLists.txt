# Set source files
set(WWLIB_SRC
    argv.cpp
    b64pipe.cpp
    b64straw.cpp
    base64.cpp
    buff.cpp
    bufffile.cpp
    chunkio.cpp
    cpudetect.cpp
    crc.cpp
    cstraw.cpp
    Except.cpp
    FastAllocator.cpp
    ffactory.cpp
    gcd_lcm.cpp
    hash.cpp
    ini.cpp
    jshell.cpp
    mpu.cpp
    multilist.cpp
    mutex.cpp
    nstrdup.cpp
    pipe.cpp
    ramfile.cpp
    random.cpp
    rawfile.cpp
    rcfile.cpp
    readline.cpp
    realcrc.cpp
    refcount.cpp
    registry.cpp
    slnode.cpp
    stimer.cpp
    straw.cpp
    strtok_r.cpp
    systimer.cpp
    TARGA.CPP
    textfile.cpp
    tgatodxt.cpp
    thread.cpp
    trim.cpp
    vector.cpp
    verchk.cpp
    widestring.cpp
    WWCOMUtil.cpp
    wwfile.cpp
    wwstring.cpp
    xpipe.cpp
    xstraw.cpp
    always.h
    argv.h
    b64pipe.h
    b64straw.h
    base64.h
    binheap.h
    bittype.h
    bound.h
    BSEARCH.H
    BUFF.H
    bufffile.h
    CallbackHook.h
    chunkio.h
    cpudetect.h
    CRC.H
    cstraw.h
    FastAllocator.h
    ffactory.h
    gcd_lcm.h
    hash.h
    hashcalc.h
    HASHLIST.H
    hashtemplate.h
    INDEX.H
    INI.H
    inisup.h
    iostruct.h
    LISTNODE.H
    mempool.h
    MPU.H
    multilist.h
    mutex.h
    notifier.h
    nstrdup.h
    ntree.h
    PIPE.H
    Point.h
    RAMFILE.H
    RANDOM.H
    RAWFILE.H
    rcfile.h
    readline.h
    realcrc.h
    ref_ptr.h
    registry.h
    sharebuf.h
    Signaler.h
    simplevec.h
    SLIST.H
    SLNODE.H
    STRAW.H
    strtok_r.h
    systimer.h
    TARGA.H
    textfile.h
    tgatodxt.h
    thread.h
    trect.h
    trim.h
    uarray.h
    Vector.H
    verchk.h
    visualc.h
    widestring.h
    win.h
    WWCOMUtil.h
    WWFILE.H
    wwstring.h
    XPIPE.H
    XSTRAW.H
)

# Targets to build.
add_library(z_wwlib STATIC)
set_target_properties(z_wwlib PROPERTIES OUTPUT_NAME wwlib)

target_sources(z_wwlib PRIVATE ${WWLIB_SRC})

target_include_directories(z_wwlib PUBLIC
    .
)

target_link_libraries(z_wwlib PRIVATE
    z_wwcommon
    zi_always
)
